buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/release" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${findProperty('bootVersion') ?: bootVersion}"
		classpath "au.com.dius:pact-jvm-provider-gradle_2.12:3.5.22"
	}
}

println "Boot Version [${findProperty('bootVersion') ?: bootVersion}], Cloud version [${findProperty('BOM_VERSION') ?: BOM_VERSION}]"

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/release" }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${project.findProperty('BOM_VERSION') ?: BOM_VERSION}"
	}
}

dependencies {
	compile("org.codehaus.groovy:groovy:2.4.15")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")

	testCompile "org.springframework.boot:spring-boot-starter-test"
	// remove::start[]
	testCompile("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
	testCompile("org.springframework.cloud:spring-cloud-contract-pact")
	// remove::end[]
}

test {
	testLogging {
		exceptionFormat = 'full'
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.1'
}